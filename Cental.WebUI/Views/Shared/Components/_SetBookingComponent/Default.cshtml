
@{
    Layout = null;
    var param = ViewData["id"].ToString();
}

<form method="post" id="formulaire-@param">
    <div class="row g-3">
        <div class="col-12">
            <select class="form-control" asp-items="@ViewBag.Brands" id="brand-@param" required>
                <option selected disabled>Araba Markası Seçin</option>
            </select>
        </div>
        <div class="col-12">
            <div class="input-group">
                <div class="d-flex align-items-center bg-light text-body rounded-start p-2">
                    <span class="fas fa-map-marker-alt"></span> <span class="ms-1">Alma Konum </span>
                </div>
                <input class="form-control" type="text" id="pickuplocation-@param" required placeholder="Bir Şehir ya da Havalimanı Girin" />
            </div>
        </div>
        <div class="col-12">
            <a href="#" class="text-start text-white d-block mb-2">Need a different drop-off location?</a>
            <div class="input-group">
                <div class="d-flex align-items-center bg-light text-body rounded-start p-2">
                    <span class="fas fa-map-marker-alt"></span><span class="ms-1">Bırakma Konum</span>
                </div>
                <input class="form-control" type="text" id="dropuplocation-@param" required placeholder="Bir Şehir ya da Havalimanı Girin" />
            </div>
        </div>
        <div class="col-12">
            <div class="input-group">
                <div class="d-flex align-items-center bg-light text-body rounded-start p-2">
                    <span class="fas fa-calendar-alt"></span><span class="ms-1">Saat Kaçta ?</span>
                </div>
                <input class="form-control rounded-right" type="date" id="pickdate-@param" required />
                <input class="ms-3 rounded-2" type="time" id="picktime-@param" required />
                   
            </div>
        </div>
        <div class="col-12">
            <div class="input-group">
                <div class="d-flex align-items-center bg-light text-body rounded-start p-2">
                    <span class="fas fa-calendar-alt"></span><span class="ms-1">Drop off</span>
                </div>
                <input class="form-control rounded-right" type="date" required id="dropdate-@param"/>
                <input class="ms-3 rounded-2" type="time" required id="droptime-@param" />
                   
               
            </div>
        </div>
        <div class="col-12">
            <button class="btn btn-light w-100 py-2" type="submit">Kiralama uygula</button>
        </div>
    </div>
</form>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
    document.getElementById('formulaire-@param').addEventListener("submit",function(event){

        event.preventDefault();
        let formData={
            ModelName:document.getElementById('brand-@param').value,
            PickUpLocation:document.getElementById('pickuplocation-@param').value,
            DropUpLocation : document.getElementById('dropuplocation-@param').value,
            PickUpTime:document.getElementById('pickdate-@param').value,
            PickUpHour :document.getElementById('picktime-@param').value,
            DropOffTime : document.getElementById('dropdate-@param').value,
            DropUpHour : document.getElementById('droptime-@param').value,
        };
        console.log(formData.PickUpLocation,formData.DropUpLocation,formData.PickUpTime,formData.PickUpHour);
            

        //Checking whether the is an empty field 
        if (!formData.ModelName || !formData.PickUpLocation || !formData.DropUpLocation ||
        !formData.PickUpTime || !formData.DropOffTime || !formData.PickUpHour || !formData.DropUpHour) {
            
            Swal.fire({
                position: "top-end",
                title: "Eksik Bilgi!",
                text: "Lütfen tüm alanları doldurun.",
                icon: "warning",
                showConfirmButton: true
            }); return;}
        fetch("/Default/SetBooking",{
             method: "POST",
             headers:{
                       "Content-Type": "application/json",
                      "Accept" : "application/json",
                   },
             body: JSON.stringify(formData)
        })
         .then(response => response.json()) // Convertir la réponse en JSON
         .then(data => {
              if (data.success) {
                  Swal.fire({
                      position:"top-center",
                      title: "Talebiniz başarıyla Gönderildi!",
                      text: data.message,
                      icon: "success",
                      timer: 4000
                  });
                       // Resetting my form areas
                  document.getElementById('formulaire').reset();
              }
              else{
                   Swal.fire({
                           position:"top-center",
                           title: "İşlem Başarısız!",
                           text: data.message,
                           icon: "error",
                           showConfirmButton: true,
                           timer: 6000 
                   });
              }
         })
         .catch(error => {
                   // Erreur réseau ou autre : afficher un message d'erreur
                   console.error('Bir hata oluştu',error);
                   Swal.fire({
                       position:"top-center",
                       title: "Error!",
                       text: "Bir hata oluştu.",
                       icon: "error",
                       showConfirmButton: true,
                       timer:1500
                   });
         });
 
    });

</script>